node.js 다운로드
https://nodejs.org
(LTS버전 다운로드)

node.js 버전 확인
cmd 창에서 node -v 명령어로 확인합니다.

npm 버전 확인
cmd 창에서 npm -v 명령어로 확인합니다.


npm init : 옵션을 직접 제공

npm init -y : 기본값을 기준으로 바로 생성

package.json 파일 만들기
모듈을 관리하는 설정파일


노드를 실행하기
node.js 실행하는 방법
node 파일이름



----------------------------------------------------------------------------

FileSystem 모듈
파일처리와 관련된 모듈입니다. 
node.js에서 가장 중요하고 기초가 되는 모듈입니다.

메소드
readFile() : 파일을 비동기적으로 읽습니다.
readFileSync() : 파일을 동기적으로 읽습니다.
writeFile() : 파일을 비동기적으로 씁니다.
writeFileSync() : 파일을 동기적으로 씁니다.

* 동기와 비동기
프로그램이 동작하는 상태에서 완전히 해당 내용을 끝내고 다음으로 제어를 넘기는 방식을 동기식, 
동작이 끝나지 않은 상태에서도 제어권을 넘긴 후 프로그램을 계속 진행하면 비동기식이라고 합니다.

예외 처리(Exception)
프로그램이 실행되고 있는 런타임시에 에러가 발생할 경우 처리할 수 있는 프로그램 구간을 의미합니다
try {
    예외 상황이 발생할 수 있는 문장
    ....
    ....
}catch(e){
    예외 상황이 발생했을 경우 처리할 문장(e는 Exception 객체)
}finally{
    예외 상황이 발생하거나 발생하지 않아도 무조건 실행될 문장(생략가능)
}

이벤트 루프(Event Loop)
node.js는 서버가 가동되면 변수들을 초기화하고 함수를 선언하고 이벤트가 발생할 때까지 기다립니다. 
이벤트가 감지되었을 때 call back 함수를 호출합니다.



---------------------------------------------------------------------------------------------------------
http 모듈
node.js에서 가장 기본적이고 중요한 서버 모듈입니다. 
HTTP 웹 서버를 생성하는 것과 관련된 모든 기능을 담당합니다.

메소드
listen() : 서버를 실행하고 클라이언트를 기다립니다.
close() : 서버를 종료합니다.

2. request 객체
클라이언트가 서버에게 전달하는 메세지(정보)를 담는 객체입니다.

속성
method : 클라이언트 요청 방식을 나타냅니다. (GET, POST)
url : 클라이언트가 요청한 URL을 나타냅니다.

3. response 객체
서버에서 클라이언트로 응답 메세지를 전송시켜주는 객체입니다.

메소드
writeHead() : 응답 헤더를 작성합니다.
end() : 응답 본문을 작성합니다.

MIME 형식
text/plain : 일반적인 text 파일
text/html : html 형식 파일
text/css : css 형식 파일
text/xml : xml 형식 파일
image/jpeg : jpeg 이미지 파일
image/png : png 이미지 파일
video/mpeg : mpeg 동영상 파일
audio/mp3 : mp3 음악 파일
...


---------------------------------------------------------------------------------------
events
이벤트 위주의 프로그램을 작성할 때 사용하는 모듈입니다.

메소드
on() : 지정한 이벤트의 리스너를 추가합니다.
once() : 지정한 이벤트의 리스너를 추가하지만 한번 실행 이후 자동 제거됩니다.
removelistener() : 지정한 이벤트에 대한 리스너를 제거합니다.
emit() : 지정한 이벤트를 발생시킵니다.

시스템 이벤트
process 객체는 노드에서 항상 사용할 수 있는 객체입니다. 
on()과 emit() 메소드는 객체를 생성하거나 모듈을 가져오지 않아도 바로 사용할 수 있습니다. 
on() 메소드를 호출하면서 이벤트 이름을 exit로 지정하면 내부적으로 프로세스가 끝날 때를 알 수 있습니다.




----------------------------------------------------------------------------------------------\
익스프레스 모듈
http 모듈만 사용해서 웹 서버를 구성하면 직접 많은 기능을 개발해야 합니다. 
이 문제를 해결하기 위해 만들어진 모듈이 익스프레스입니다. 
익스프레스 모듈을 사용하면 간단한 코드로 웹 서버의 기능을 대부분 구현할 수 있고, 
미들웨어와 라우터를 사용하여 편리하게 웹 서버를 구성할 수 있습니다.


메소드
use() : 미들웨어 함수를 사용합니다.
get() : get으로 사용자 정보를 전달 받습니다.
set() : 서버 설정을 위한 속성을 설정합니다.
redirect() : 웹 페이지의 경로를 강제로 이동시킵니다.
send() : 클라이언트에 응답 데이터를 보냅니다. 
        전달할 수 있는 데이터는 html, buffer, json, json 배열.. 등입니다.
header() : 헤더를 확인합니다.


[package 설치하기]
npm install 모듈명(npm i 모듈명)
npm i express


package 복원하기
npm install